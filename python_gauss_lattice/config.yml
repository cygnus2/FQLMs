# This is an input file for the diagonalization routine. The format is YAML,
# which is quite flexible.
# The values don't have to be in any specific order. It is important though,
# that the names stay as they are - these are the variable names, essentially,
# in the code.

# ----------------------------------
# General parameters:
# working_directory: 'le_output/' # Directory where everything is stored/loaded.
working_directory: /home/lukas/test_dir/
# working_directory: ../../../../test_dir/
# state_file: '../python_data/local_state_storage/winding_states_2x2.hdf5'
# state_file: '../python_data/local_state_storage/le_states_2x2x6.hdf5'
L : [4,4] # Spatial extent of the lattice.
# winding_sector: [0,1] # Winding sector to be considered.
logfile : 'logfile.log' # Logfile to store the output.
n_threads: 4

# ----------------------------------
# Important for diagonalization.
gauge_particles : 'bosons' # Either bosons or fermions.
full_diag : False # If True, the full matrix is diagonalized - extremely costly.
ev_type : 'SA' # ARPACK style specification of the types of eigenvalues. Most likely you want to use 'SA' which gives the lowest algebraic values under consideration of the sign, i.e., the lowest part of the spectrum.
n_eigenvalues : 20 # Number of eigenvalues to compute.
J : -1 # J Coupling.
#winding_sector : [0,0,0] # If this is specified, only the appropriate winding sector will be diagonalized.
compute_eigenstates: True # If true, the eigenstates will be exported.
store_hamiltonian: True # If true, the Hamiltonian will be stored.

# ----------------------------------
# Important for multi-lambda diagonalization. (overrides lambda parameter)
lambdas : [-3.0, 1.0, 2] # Range that specifies the lambda values to scan (min, max, n_steps)
# lambda: 2.0

#-----------------------------------
# LE stuff.
maximum_excitation_level: 3
notification_level: 0
